
/***!Parallax
    - The Technique can be read here:
    - Other useful resource on the topic: https://stackoverflow.com/questions/60417434/how-to-make-parallax-effect-in-image-tag-without-background-image
***/
*{
	box-sizing: border-box; /* I recommend using this with parallax, otherwise - AFTER you scrolled down - the image will have some weird white space that becomes visible for the user --> you definitely DON'T want this! xD */
	margin: 0;
	padding: 0;
}

img {
    height: auto;
}

/*** --- Von mir eingefügt, beim Versuch, die SBB-Storytelling Technik zu kopieren ... ***/

:root{
	--padding-top: 0vh;
    --app-header-height: 1px;
	--app-height: 100vh;
	--t-scrolly-sticky-bg: rgb(34, 33, 29);
	--padding-bottom: 0vh;
    --fixed-width: 512px; /* Goal hier: I want a fixed AR of 1:1! --> Dient der Übergangs-Sektion... */
    --fixed-height: 512px; /* Goal hier: I want a fixed AR of 1:1! --> Dient der Übergangs-Sektion... */
    --fixed-width-tablet: 34.9vw;
    --fixed-height-tablet: 34.9vw;
    --fixed-width-phone: 250px;
    --fixed-height-phone: 250px;
}

.main-parallax-wrapper {
    position: relative;
    /* z-index: auto;
    overflow: auto; */
}

.storytelling-img{
	width: 100%;
    height: 100%;
    object-fit: cover;
    min-width: 100%;
	border-style: none;
	display: block;
}
.alternative-img-stick{
	position: sticky;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: opacity .6s ease-in-out;
    top: var(--app-header-height);
    height: calc(var(--app-height) - var(--app-header-height));
    background-color: var(--t-scrolly-sticky-bg)
}

.parallax-effect{
	display: flex;
	flex-direction: column;
	height: 100%;
	width: 100%;
	margin: calc(50vh - var(--app-header-height) / 2) auto 0; /* <- DAS ist der Parallax-Effekt (und das untere Styling). */
	padding: var(--padding-top) 12px calc(61vh - var(--app-header-height) / 2); /* <- DAS ist der Parallax-Effekt (und das obere Styling). */
}
.outer-text-wrapper-storytelling{
	margin-top: 25px;
	/* position: relative; */
    display: flex;
    justify-content: center;
    flex-direction: column;
    width: 100%;
    padding-bottom: var(--padding-bottom);
    transition: opacity .6s ease-in-out;
}
.story-telling-content, .story-telling-content--hero{
    position: absolute;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    padding: 8px 12px;
    background-color: rgba(0, 0, 0, .8);
    -webkit-backdrop-filter: blur(4px);
    backdrop-filter: blur(4px);
    border-radius: 2px;
}

/** -- Start: Übergangs-Sektion Storytelling -- **/

/* -- Layout -- */
.storytelling-new-chapter-wrapper{/* This is our main-wrapper that wraps everything... */
    padding: 80px 90px;
}
.storytelling-new-chapter-wrapper{
    background-color: #EAEADA;
    min-height: 100vh;
}
.flex-desktop-column{
    display: flex;
    flex-direction: column-reverse;
    justify-content: center;
    align-items: center;
    border-bottom: 1px solid orangered;
}
.flex-desktop-row{
    display: grid;
    grid-template-columns: 50% 1fr;
    grid-gap: 40px;
    /* color: #f8f8f2; */
    /* display: flex;
    flex-direction: row;
    justify-content: space-evenly; */
    /* align-items: center; */
}
.flex-desktop-row > *{ /* This targets: All direct children --> hier: 2 <div>'s, welche einen Zwischen-Abstand benötigen... */
    margin: 45px;
}
.flex-desktop-row div:nth-child(1) {
    padding: 0px 25px;
}
.invisible-story-for-desktop{
    display: none;
}
.storytelling-problem-img{ /*The image's Container will get an Aspect-Ratio of 1:1... */
    height: var(--fixed-height); 
    width: var(--fixed-width);
}
.storytelling-problem-img img{ /*The image itself should behave like a BG-image... */
    object-fit: cover;
}
@media(max-width: 1220px){ /* Breakpoints... */
    .storytelling-problem-img{ /*The image's Container will get an Aspect-Ratio of 1:1... */
        height: var(--fixed-height-tablet); 
        width: var(--fixed-width-tablet);
    }
}
@media(max-width: 768px){ /* Breakpoints... */
    .storytelling-new-chapter-wrapper{
        padding: 20px 5px;
    }
    .flex-special-storytelling{
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    .flex-special-storytelling span{
        color: #D3A468;
        font-size: clamp(20vh, 30vh, 60vh);
    }
    .flex-desktop-row > *{ /* This targets: All direct children --> hier: 2 <div>'s, welche einen Zwischen-Abstand benötigen... */
        margin: 0px;
    }
    /* .flex-desktop-row:nth-child(2){
        margin-top: 5%;
        /* width: 50%; }*/
    /* .storytelling-problem-content{
        width: 50%;
    } */
    .flex-desktop-column{
        flex-direction: row-reverse;
        border-bottom: none;
    }
    .flex-desktop-row{
        grid-template-columns: repeat(1, 1fr);
        grid-gap: 25px;
    }
    .storytelling-problem-img{
        justify-self: center;
    }
    .invisible-story-for-desktop{
        display: block;
    }
    /* .h2-storytelling-headlines::after{
        position: absolute;
        top: -10px;
        content: "1";
        padding-left: 6vw;
        padding-bottom: 4vh;
        color: #D3A468;
        font-size: clamp(18vh, 28vh, 38vh);
    } */
    .h2-storytelling-headlines{
        padding: 0 25px;
        width: 75%;
    }
    .h3-storytelling-headlines{
        display: none;
    }
    .storytelling-problem-img{ /*The image's Container will get an Aspect-Ratio of 1:1... */
        height: var(--fixed-height-phone); 
        width: var(--fixed-width-phone);
    }
}

/* -- Font-Size & Color -- */
.h2-storytelling-headlines{ /* Haupttitel der Sektion */
    font-size: clamp(20px, 10vw, 10vh);
    /* text-align: center; */
    margin-block-start: 0;
    margin-block-end: 8px;
    padding-bottom: 1.5%;
}
.h3-storytelling-headlines{
    color: #0000007c;
}
.h3-storytelling-problem-content{ /* Artikel-Titel */
    font-size: 5vh;
    color: red;
    /* text-align: center; */
}
.storytelling-problem-content p{ /*Styling des Text-Paragraphens..*/
    margin-top: 5%;
}



/* .flex-storytelling-headlines{

} */

/* -- Versuch, mit position "absolute" die Bilder aufeinander zu stapeln... -- */

/* -- Grid, welches die einzelnen Parallax-Elemente aufeinander staut --> hat nicht funktioniert... xD -- */
/* .grid-stapel {
  display: grid !important;
  grid-template: 1fr / 1fr !important;
  place-items: center !important;
}
.grid-stapel > * {
  grid-column: 1 / 1 !important;
  grid-row: 1 / 1 !important;
  width: 100%;
}
.grid-stapel .grid-stapel--below {
  z-index: 1 !important;
}
.grid-stapel .grid-stapel--top {
  z-index: 2 !important;
} */

/* -- Dynamische CSS-Klassen (aktiviert sich via JS) -- */
/* .invisible-parallax {
    display: none;
}
.invisible-parallax.triggered-visible{
    display: block;
}

.test{
    display: flex;
}

.test > * {
    width: 100%;
} */